# ================================================
# SYSTEM SERVICES - Admin Access
# ================================================

# Home Assistant
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name home.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # FIXED AUTH LOCATION - Using correct Authelia endpoint
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "home-assistant",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "freddy:8123",
            "response_time": "67ms",
            "uptime": "99.95%",
            "type": "home-automation",
            "entities": 45,
            "automations": 12,
            "devices": 28,
            "zones": 3
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Freddy server (Home Assistant)
        proxy_pass http://100.121.199.80:8123;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Pi-hole
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name pihole.7gram.xyz dns.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # FIXED AUTH LOCATION - Using correct Authelia endpoint
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "pihole",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "freddy:80",
            "response_time": "23ms",
            "uptime": "99.98%",
            "type": "dns-filter",
            "domains": ["pihole.7gram.xyz", "dns.7gram.xyz"],
            "queries_today": 12847,
            "blocked_today": 3921,
            "block_percentage": "30.5%",
            "blocklists": 15
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Pi-hole is on default network, may need host IP or add to network
        proxy_pass http://100.121.199.80:80;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Portainer Sullivan
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name portainer-sullivan.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # FIXED AUTH LOCATION - Using correct Authelia endpoint
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "portainer-sullivan",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:9000",
            "response_time": "89ms",
            "uptime": "99.2%",
            "type": "container-management",
            "host": "sullivan",
            "containers": 23,
            "images": 45,
            "volumes": 12,
            "networks": 8
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:9000;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Portainer Freddy
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name portainer-freddy.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # FIXED AUTH LOCATION - Using correct Authelia endpoint
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "portainer-freddy",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "freddy:9000",
            "response_time": "67ms",
            "uptime": "99.6%",
            "type": "container-management",
            "host": "freddy",
            "containers": 8,
            "images": 15,
            "volumes": 6,
            "networks": 4
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Freddy server
        proxy_pass http://100.121.199.80:9000;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}