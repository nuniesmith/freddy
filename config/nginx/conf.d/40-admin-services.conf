# ================================================
# ADMIN SERVICES - Admins Group (Two Factor)
# ================================================

# Sonarr
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name sonarr.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # FIXED AUTH LOCATION - Using correct Authelia endpoint (Two Factor)
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "sonarr",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8989",
            "response_time": "89ms",
            "uptime": "99.5%",
            "type": "tv-automation",
            "queue_items": 5,
            "indexers": 8,
            "disk_space": "2.3TB free"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:8989;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Radarr
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name radarr.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # FIXED AUTH LOCATION - Using correct Authelia endpoint (Two Factor)
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "radarr",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:7878",
            "response_time": "112ms",
            "uptime": "99.7%",
            "type": "movie-automation",
            "queue_items": 3,
            "indexers": 6,
            "disk_space": "1.8TB free"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:7878;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Lidarr
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name lidarr.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # FIXED AUTH LOCATION - Using correct Authelia endpoint (Two Factor)
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "lidarr",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8686",
            "response_time": "98ms",
            "uptime": "99.4%",
            "type": "music-automation",
            "queue_items": 7,
            "indexers": 4,
            "disk_space": "850GB free"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:8686;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Readarr Audio
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name audiobooks.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # FIXED AUTH LOCATION - Using correct Authelia endpoint (Two Factor)
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "readarr-audio",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8787",
            "response_time": "134ms",
            "uptime": "99.1%",
            "type": "audiobook-automation",
            "queue_items": 2,
            "indexers": 3,
            "disk_space": "1.2TB free"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:8787;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Readarr Ebooks
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name ebooks.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # FIXED AUTH LOCATION - Using correct Authelia endpoint (Two Factor)
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "readarr-ebooks",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8787",
            "response_time": "121ms",
            "uptime": "99.3%",
            "type": "ebook-automation",
            "queue_items": 4,
            "indexers": 5,
            "disk_space": "890GB free"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:8787;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Jackett
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name jackett.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # FIXED AUTH LOCATION - Using correct Authelia endpoint (Two Factor)
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "jackett",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:9117",
            "response_time": "67ms",
            "uptime": "99.8%",
            "type": "indexer-proxy",
            "indexers": 25,
            "active_indexers": 18,
            "last_test": "2min ago"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:9117;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# qBittorrent
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name qbt.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # FIXED AUTH LOCATION - Using correct Authelia endpoint (Two Factor)
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "qbittorrent",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8080",
            "response_time": "45ms",
            "uptime": "99.9%",
            "type": "torrent-client",
            "active_torrents": 12,
            "download_speed": "23.4 MB/s",
            "upload_speed": "8.2 MB/s"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:8080;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# FileBot
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name filebot.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # FIXED AUTH LOCATION - Using correct Authelia endpoint (Two Factor)
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "filebot",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:5452",
            "response_time": "78ms",
            "uptime": "99.6%",
            "type": "file-organizer",
            "license": "valid",
            "last_run": "15min ago",
            "files_processed": 3421
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:5452;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Duplicati
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name duplicati.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # FIXED AUTH LOCATION - Using correct Authelia endpoint (Two Factor)
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "duplicati",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8200",
            "response_time": "156ms",
            "uptime": "99.2%",
            "type": "backup-service",
            "backup_jobs": 5,
            "last_backup": "2h ago",
            "backup_size": "234GB"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:8200;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}