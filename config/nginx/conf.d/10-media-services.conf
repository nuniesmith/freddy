# ================================================
# MEDIA SERVICES - Users Group (One Factor)
# ================================================

# Emby - Optimized for Media Streaming
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name emby.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    error_page 404 /errors/404.html;
    error_page 500 502 503 504 /errors/500.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }
    
    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }
    
    # CONSISTENT AUTH LOCATION - Using correct Authelia endpoint
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "emby",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8096",
            "response_time": "145ms",
            "uptime": "99.8%"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:8096;
        include /etc/nginx/includes/media_proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Jellyfin - Optimized for Media Streaming
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name jellyfin.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    error_page 404 /errors/404.html;
    error_page 500 502 503 504 /errors/500.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }
    
    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }
    
    # CONSISTENT AUTH LOCATION - Using correct Authelia endpoint
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "jellyfin",
            "status": "warning",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8099",
            "response_time": "342ms",
            "uptime": "98.1%",
            "issues": ["high_response_time"]
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:8099;
        include /etc/nginx/includes/media_proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Plex - Optimized for Media Streaming
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name plex.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    error_page 404 /errors/404.html;
    error_page 500 502 503 504 /errors/500.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }
    
    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }
    
    # CONSISTENT AUTH LOCATION - Using correct Authelia endpoint
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "plex",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:32400",
            "response_time": "123ms",
            "uptime": "99.5%"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:32400;
        include /etc/nginx/includes/media_proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Audiobookshelf
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name abs.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }
    
    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }
    
    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }
    
    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }
    
    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # CONSISTENT AUTH LOCATION - Using correct Authelia endpoint
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "audiobookshelf",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:80",
            "response_time": "89ms",
            "uptime": "99.7%"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:80;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Calibre
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name calibre.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }
    
    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }
    
    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }
    
    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }
    
    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # CONSISTENT AUTH LOCATION - Using correct Authelia endpoint
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "calibre",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8081",
            "response_time": "156ms",
            "uptime": "99.3%"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:8081;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Calibre Web
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name calibreweb.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # CONSISTENT AUTH LOCATION - Using correct Authelia endpoint
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "calibreweb",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8083",
            "response_time": "134ms",
            "uptime": "99.6%"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:8083;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# YouTube-DL
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name youtube.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # CONSISTENT AUTH LOCATION - Using correct Authelia endpoint
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "youtube-dl",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:17442",
            "response_time": "201ms",
            "uptime": "98.9%"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:17442;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Mealie
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name mealie.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # CONSISTENT AUTH LOCATION - Using correct Authelia endpoint
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "mealie",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:9000",
            "response_time": "112ms",
            "uptime": "99.4%"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:9000;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Grocy
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name grocy.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # CONSISTENT AUTH LOCATION - Using correct Authelia endpoint
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "grocy",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:80",
            "response_time": "98ms",
            "uptime": "99.8%"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:80;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Wiki
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name wiki.7gram.xyz;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    include /etc/nginx/includes/security_headers.conf;
    
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;
    error_page 504 /errors/504.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/500.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/502.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/503.html {
        root /config/nginx/html;
        internal;
    }

    location = /errors/504.html {
        root /config/nginx/html;
        internal;
    }
    
    # CONSISTENT AUTH LOCATION - Using correct Authelia endpoint
    location = /auth {
        internal;
        proxy_pass http://authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "wiki",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8080",
            "response_time": "167ms",
            "uptime": "99.2%"
        }';
    }
    
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:8080;
        include /etc/nginx/includes/proxy_params.conf;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# Nextcloud - nc.7gram.xyz (No Auth - Uses internal auth)
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name nc.7gram.xyz;
    
    # SSL Certificate paths
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Health endpoint for dashboard monitoring
    location = /health {
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "*" always;
        
        return 200 '{
            "service": "nextcloud",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8081",
            "response_time": "234ms",
            "uptime": "99.1%",
            "note": "No auth required - uses internal authentication"
        }';
    }
    
    location / {
        proxy_pass http://sullivan.7gram.xyz:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        
        # WebDAV support
        proxy_request_buffering off;
        
        # Large file upload support
        client_max_body_size 10G;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}