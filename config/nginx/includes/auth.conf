# Authelia Authentication Configuration
# /etc/nginx/includes/auth.conf
# Updated to fix 500 errors and improve compatibility

# Enable auth_request module
auth_request /auth;

# Set variables from Authelia auth response headers
# These are the actual headers that Authelia sends
auth_request_set $user $upstream_http_remote_user;
auth_request_set $groups $upstream_http_remote_groups;
auth_request_set $name $upstream_http_remote_name;
auth_request_set $email $upstream_http_remote_email;

# Set additional useful variables
auth_request_set $auth_status $upstream_status;
auth_request_set $auth_cookie $upstream_http_set_cookie;

# Pass authentication variables to backend applications
# Using the standard Remote-* headers that most apps expect
proxy_set_header Remote-User $user;
proxy_set_header Remote-Groups $groups;
proxy_set_header Remote-Name $name;
proxy_set_header Remote-Email $email;

# Additional headers for compatibility with various applications
proxy_set_header X-Remote-User $user;
proxy_set_header X-Remote-Groups $groups;
proxy_set_header X-Remote-Name $name;
proxy_set_header X-Remote-Email $email;

# Forward authentication status
proxy_set_header X-Forwarded-User $user;

# Clear any existing Authorization header to prevent conflicts
proxy_set_header Authorization "";

# Handle cookies from Authelia if needed
proxy_set_header Set-Cookie $auth_cookie;

# Additional security headers
proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header X-Forwarded-Host $http_host;

# Note: Each server block must also include the /auth location:
#
# location = /auth {
#     internal;
#     proxy_pass http://authelia:9091/api/verify;
#     proxy_pass_request_body off;
#     proxy_set_header Content-Length "";
#     proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
#     proxy_set_header X-Forwarded-Method $request_method;
#     proxy_set_header X-Forwarded-Proto $scheme;
#     proxy_set_header X-Forwarded-Host $http_host;
#     proxy_set_header X-Forwarded-Uri $request_uri;
#     proxy_set_header X-Forwarded-For $remote_addr;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header Host $http_host;
#     proxy_set_header Accept-Encoding "";
# }
#
# And error handling:
# error_page 401 @error401;
# location @error401 {
#     return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
# }