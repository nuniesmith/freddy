# Add these CORS headers to each service's nginx configuration
# This allows your dashboard to check service health across subdomains

# ================================================
# CORS HEADERS TO ADD TO EACH SERVICE
# ================================================

# Add this location block to each service (emby, jellyfin, plex, etc.)
# This creates a health endpoint that returns proper CORS headers

location = /health {
    # Add CORS headers for dashboard health checks
    add_header 'Access-Control-Allow-Origin' 'https://7gram.xyz' always;
    add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
    add_header 'Access-Control-Max-Age' 86400 always;
    
    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://7gram.xyz' always;
        add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Max-Age' 86400 always;
        add_header 'Content-Length' 0;
        return 204;
    }
    
    # Return a simple health status
    add_header Content-Type "application/json" always;
    return 200 '{"status":"healthy","service":"$server_name","timestamp":"$time_iso8601"}';
}

# ================================================
# EXAMPLE: Updated Emby Server Block with CORS
# ================================================

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name emby.7gram.xyz;
    
    # SSL Configuration (same as before)
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Error pages
    error_page 404 /errors/404.html;
    error_page 500 502 503 504 /errors/500.html;
    error_page 401 @error401;
    
    location = /errors/404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /errors/500.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # âœ… CORS-enabled health endpoint
    location = /health {
        add_header 'Access-Control-Allow-Origin' 'https://7gram.xyz' always;
        add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Max-Age' 86400 always;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://7gram.xyz' always;
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Max-Age' 86400 always;
            add_header 'Content-Length' 0;
            return 204;
        }
        
        add_header Content-Type "application/json" always;
        return 200 '{"status":"healthy","service":"emby","timestamp":"$time_iso8601"}';
    }
    
    # Auth endpoint (with IP fix if needed)
    location = /auth {
        internal;
        # Use IP address if hostname resolution still fails
        proxy_pass http://auth.7gram.xyz:9091/api/verify;
        # OR if DNS is working now:
        # proxy_pass http://authelia:9091/api/verify;
        
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
    }
    
    # Main application location
    location / {
        # Include auth configuration
        include /etc/nginx/includes/auth.conf;
        
        # Proxy to Sullivan server
        proxy_pass http://sullivan.7gram.xyz:8096;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Media streaming optimizations
        proxy_buffering off;
        proxy_request_buffering off;
        client_max_body_size 0;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }
}

# ================================================
# QUICK COMMANDS TO FIX ALL CONFIGS AT ONCE
# ================================================

# Add health endpoints to all service configs:
# 1. Create a shared CORS include file
# 2. Add it to each service configuration
# 3. Reload nginx